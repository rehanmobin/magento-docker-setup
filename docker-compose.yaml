version: '3.8'

services:
  redis:
    image: redis
    environment: { TERM: xterm }
    ports: ["6379:6379"]
    restart: unless-stopped
    networks:
      default:
        aliases: []
      magento245:
        aliases: ["magento245-redis"]
  mysql:
    image: mysql:8.0
    volumes:
      - ./docker/mysql/initdb.d:/docker-entrypoint-initdb.d
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - 3306:3306
    networks:
      default:
        aliases: []
      magento245:
        aliases: ["magento245-mysql"]
    restart: unless-stopped
  elasticsearch:
    image: elasticsearch:7.17.6
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 2g
    ports:
      - "9300:9300"
      - "9200:9200"
    networks:
      default:
        aliases: []
      magento245:
        aliases: ["magento245-elasticsearch"]
    restart: unless-stopped
  app:
    image: 'magento'
    build:
      dockerfile: ./docker/apache/Dockerfile
      args:
        SERVER_NAME: ${SERVER_NAME}
    volumes:
      - ./magento/:/var/www/html:rw,cached
    networks:
      - magento245
    ports:
      - 443:443
      - 80:80
      - 8080:80
    depends_on:
      - redis
      - mysql
      - elasticsearch
    env_file:
      - ./.env



networks:
  magento245:
    name: magento245